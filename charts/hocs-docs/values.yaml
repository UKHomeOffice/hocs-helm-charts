---
hocs-generic-service:
  nameOverride: hocs-docs

  selector:
    outbound:
      required: true
    database:
      required: true

  networkpolicy:
    enabled: true
    ingress:
      enabled: true
      ports:
        - port: 10443
          protocol: TCP
      from:
        - podSelector:
            matchLabels:
              role: hocs-casework
        - podSelector:
            matchLabels:
              role: hocs-frontend
        - podSelector:
            matchLabels:
              role: hocs-info-service
        - podSelector:
            matchLabels:
              role: hocs-management-ui
        - podSelector:
            matchLabels:
              role: hocs-templates
        - podSelector:
            matchLabels:
              role: hocs-workflow
    egress:
      enabled: true
      ports:
        - port: 10443
          protocol: TCP
      to:
        - namespaceSelector:
            matchLabels:
              name: virus-scan
        - namespaceSelector:
            matchLabels:
              name: hocs-converter

  app:
    image:
      repository: quay.io/ukhomeofficedigital/hocs-docs
    env:
      javaOpts: >-
        -XX:InitialRAMPercentage=30 -XX:MaxRAMPercentage=50
        -Djava.security.egd=file:/dev/./urandom
        -Djavax.net.ssl.trustStore=/etc/keystore/truststore.jks
        -Dhttps.proxyHost=hocs-outbound-proxy.{{ .Release.Namespace }}.svc.cluster.local
        -Dhttps.proxyPort=31290
        -Dhttp.nonProxyHosts=*.svc.cluster.local
      #  on most services the line above is -Dhttp.nonProxyHosts=*.{{ .Release.Namespace }}.svc.cluster.local to discourage cross namespace communication, but this service talks to 'clamav.virus-scan.svc.cluster.local' too.
      springProfiles: 'sqs, sns, s3'
      clamAvRoot: 'https4://clamav.virus-scan.svc.cluster.local'
      converterRoot: 'https4://hocs-docs-converter.hocs-converter.svc.cluster.local'
      docsQueueName: '{{ .Release.Namespace }}-document-sqs'
      docsQueueNameDlq: '{{ .Release.Namespace }}-document-sqs-dlq'
      trustedBucketName: '{{ .Release.Namespace }}-trusted-s3'
      untrustedBucketName: '{{ .Release.Namespace }}-untrusted-s3'
      auditTopicName: '{{ .Release.Namespace }}-sns'
